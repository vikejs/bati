# Step 3
on:
  workflow_call:
    inputs:
      os:
        required: true
        type: string
      node:
        required: true
        type: number
      group:
        required: true
        type: number
      entry:
        required: true
        type: string

concurrency:
  group: tests-generated-${{ inputs.os }}-${{ inputs.node }}-${{ inputs.group }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  reusable_workflow_job:
    runs-on: ${{ inputs.os }}

    name: group ${{ inputs.group }}

    env:
      BATI_TEST: true
      TEST_AUTH0_CLIENT_ID: ${{ secrets.TEST_AUTH0_CLIENT_ID }}
      TEST_AUTH0_ISSUER_BASE_URL: ${{ secrets.TEST_AUTH0_ISSUER_BASE_URL }}
      TEST_FIREBASE_ACCOUNT: ${{ secrets.TEST_FIREBASE_ACCOUNT }}
      TEST_GITHUB_CLIENT_ID: ${{ secrets.TEST_GITHUB_CLIENT_ID }}
      TEST_GITHUB_CLIENT_SECRET: ${{ secrets.TEST_GITHUB_CLIENT_SECRET }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.node }}

      - name: Cache for Turbo
        uses: rharkor/caching-for-turbo@v1.8

      - uses: oven-sh/setup-bun@v2
        name: Install bun
        with:
          bun-version: "1.2.15"

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        id: pnpm-install
        with:
          run_install: false

      - name: Download Bati CLI
        uses: actions/download-artifact@v4
        with:
          name: bati-cli-${{ inputs.os }}-${{ inputs.node }}
          path: ./bati-cli

      - name: Download Bati tests
        uses: actions/download-artifact@v4
        with:
          name: bati-tests-${{ inputs.os }}-${{ inputs.node }}
          path: ./bati-tests

      - name: Download tests-utils
        uses: actions/download-artifact@v4
        with:
          name: tests-utils-${{ inputs.os }}-${{ inputs.node }}
          path: ./bati-tests-utils

      - name: Download tests-files
        uses: actions/download-artifact@v4
        with:
          name: tests-files-${{ inputs.os }}-${{ inputs.node }}
          path: ./bati-tests-files

      - name: Generate dynamic composite action
        run: node ./scripts/gen-composite-workflow-action.js '${{ inputs.entry }}'

      # Step 4
      - name: Run all tests
        id: gen
        uses: ./.github/actions/bati-gen
        with:
          os: ${{ inputs.os }}
          node: ${{ inputs.node }}

#      - name: Cleanup
#        if: always() && steps.gen.outcome != 'success'
#        shell: bash
#        run: rm -rf ./.github/actions/bati-gen
